@model shopaoquan.Models.product

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_layout_admin.cshtml";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>product</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.stt, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.stt, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.stt, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.HiddenFor(model => model.id_product)

        <div class="form-group">
            @Html.LabelFor(model => model.name_product, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.name_product, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.name_product, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.images, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <img id="productImage" style="width:100px;" alt="ảnh" src="~/assets/images/products/@Model.images" />
                <input id="imageInput" type="file" name="image" class="from-control" onchange="updateImage()" required />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.price_new, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.price_new, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.price_new, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.price_old, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.price_old, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.price_old, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.describe, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.describe, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.describe, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.id_subcate, "id_subcate", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("id_subcate", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.id_subcate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.id_brand, "id_brand", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("id_brand", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.id_brand, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script>
    function updateImage() {
        var input = document.getElementById('imageInput');
        var image = document.getElementById('productImage');

        if (input.files && input.files[0]) {
            var reader = new FileReader();

            reader.onload = function (e) {
                image.src = e.target.result;
            }

            reader.readAsDataURL(input.files[0]); // Convert to base64 string
        }
    }
</script>

