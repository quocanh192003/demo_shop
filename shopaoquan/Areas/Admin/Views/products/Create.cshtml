@model shopaoquan.Models.product

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_layout_admin.cshtml";
}

<h2>Thêm sản phẩm</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.id_product, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.id_product, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.id_product, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.name_product, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.name_product, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.name_product, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">

        @Html.LabelFor(model => model.images, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input class="form-control text-box single-line" id="imageInput" name="imageInput" type="file">
            @Html.ValidationMessageFor(model => model.images, "", new { @class = "text-danger" })
            <img id="selectedImage" src="#" alt="Selected Image" style="display:none; width: 320px; height: auto;" />
        </div>
    </div>
    @section scripts {
        <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
        <script>
            $(document).ready(function () {
                // File input change event
                $("#imageInput").change(function () {
                    // Get selected file
                    var file = this.files[0];

                    if (file) {
                        // Create a FileReader
                        var reader = new FileReader();

                        // Set the FileReader callback function
                        reader.onload = function (e) {
                            // Update the src attribute of the img element
                            $("#selectedImage").attr("src", e.target.result);
                            // Show the img element
                            $("#selectedImage").show();
                        };

                        // Read the file as a data URL
                        reader.readAsDataURL(file);
                    } else {
                        // Hide the img element if no file is selected
                        $("#selectedImage").hide();
                    }
                });
            });
        </script>
        }
        <div class="form-group">
            @Html.LabelFor(model => model.price_new, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.price_new, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.price_new, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.price_old, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.price_old, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.price_old, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.describe, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.describe, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.describe, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.id_subcate, "id_subcate", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("id_subcate", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.id_subcate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.id_brand, "id_brand", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("id_brand", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.id_brand, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
